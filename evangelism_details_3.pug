//- evangelism_details_3.pug
| #[br] In previous jobs I created 
| #[a(href="https://developers.redhat.com/coderland/") Coderland,] a fictional amusement park that showcased key technologies, products, and 
| techniques in the context of a frame story that tied everything together. Its rides included 
| #[a(href="https://developers.redhat.com/coderland/serverless/") the Compile Driver,] a ride 
| that illustrated how to use serverless computing with Knative, and 
| #[a(href="https://developers.redhat.com/coderland/reactive/") the Reactica roller coaster,] 
| a terrifying thrill ride that demonstrated reactive programming. I also created a weekly video show called 
| #[a(href="http://developer.ibm.com/tv/dwmailbag") the developerWorks Mailbag] that covered 
| hardcore technical topics with humor and style.
| #[em But everything I do starts and ends with code. ]
| #[br] #[br]
blockquote
  | #[em Pro Tip #2:] When stuck on the streets of Mumbai at rush hour, your taxi driver may decide to cross the median of a 12-lane highway, 
  | drive at a high rate of speed into oncoming traffic, and then dodge back onto the correct side of the road at the last 
  | possible second. This is perfectly normal, legal, and unremarkable. 
| The technologies I 
| have evangelized over the years include Knative; OpenShift; Quarkus; Docker, Podman, and Kubernetes; chatbots; 
| cognitive computing with Watson; REST, SOAP and the #[span(class='nowrap') WS-*] stack; 
| XSLT and XML; the Eclipse platform; Service Component Architecture; and XForms. In all cases, I created the 
| materials that explained the technology and built the sample code  
| that showed it in action. (As an example, you can take a look at #[a(href='examples/Hands-on_workshop_slides-letter.pdf') the slides], 
| #[a(href='examples/Hands-on_workshop_handouts-letter.pdf') the lab manual,] and 
| #[a(href='examples/workshop.zip') the sample code] for the Service Component Architecture workshop I created.) #[br] #[br]
